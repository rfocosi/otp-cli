#!/bin/sh

TOKEN_NAME=$1
TOKEN_KEY=$2

create_plain_token()
{
  INPUT_FILE="$TOKENFILES_DIR/$TOKEN_NAME"
  echo $TOKEN_KEY > $INPUT_FILE
  chmod 400 $INPUT_FILE
}

show_usage()
{
  [ -n "$1" ] && echo "ERROR: $1"
  echo "Usage: $( basename ${0} ) add [-h] [Token Name] [Token Key]"
  echo
  echo " -h : This help"
  echo
  echo "If [Token Name] or [Token Key] are empty, they will be prompted."
  exit 1
}

if [ "-h" = "$1" ]; then
  show_usage
  exit 1
fi

read_token_name

if [ -z "$TOKEN_KEY" ]; then
  read_hidden_input "Token key: "
  echo
  TOKEN_KEY=$IN
  if [ -z "$TOKEN_KEY" ]; then
    show_usage "Token key can not be empty"
    exit 1
  fi
fi

echo
echo "An empty password will not lock the file"
read_hidden_input "Password: "
echo
PASSWORD1=$IN
if [ -z "$PASSWORD1" ]; then
  create_plain_token
  echo "WARN: Token is not password protected!"
  echo "Created [$INPUT_FILE]"
  exit 0
fi

read_hidden_input "Confirm password: "
echo
PASSWORD2=$IN

if [ "$PASSWORD1" != "$PASSWORD2" ]; then
  echo "ERROR: The passwords do not match!"
  exit 1
fi

create_plain_token

OUTPUT_FILE="$TOKENFILES_DIR/$TOKEN_NAME.enc"
rm -f "$OUTPUT_FILE"
echo -n $PASSWORD1 | openssl enc -aes-256-cbc -salt -in "$INPUT_FILE" -out "$OUTPUT_FILE" -pass stdin
rm -f "$INPUT_FILE"
chmod 400 $OUTPUT_FILE
echo "Created [$OUTPUT_FILE]"
