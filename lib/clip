#!/bin/sh

validate_modifiers()
{
  OUTPUT="/dev/stdout"

  [ "$1" = "-h" ] && show_usage

  while [ $# -gt 0 ]
  do
    [ "$1" = "-k" ] && KEEP="true" && OUTPUT="/dev/null"
    [ "$1" = "-s" ] && OUTPUT="/dev/null"
    [ $1 != -* ] && TOKEN_NAME="$1"
    shift
  done
}

show_usage()
{
  [ -n "$1" ] && echo "ERROR: $1"
  echo "Usage: $( basename ${0} ) clip [-h] [-k] [-s] <Token Name>"
  echo
  echo " -h : This help"
  echo " -k : Keep generating OTP."
  echo " -s : Silent. Do not output anything to console."
  exit 1
}

#Init
validate_modifiers $@

read_token_name

get_token

[ $WAIT_FOR_NEXT -gt 0 ] && [ "$KEEP" = "" ] && WAIT=true

clip_otp()
{
  get_otp $TOKEN
  copy_to_clipboard $OTP
  [ -z "$NO_CLIP" ] && printf "\nSent to clipboard!" > $( echo "$OUTPUT" )
  return 0
}

clear_display_message()
{
  [ $1 -gt 0 ] && printf "\r" > $( echo "$OUTPUT" ); for i in {1..$1}; do printf " " > $( echo "$OUTPUT" ); done
  return 0
}
echo

printf "\n" > $( echo "$OUTPUT" )
while true; do
  remaining_seconds

  if [ $WAIT ]; then
    [ $WAIT_FOR_NEXT -ge $REMAINING ] && display_message=`printf "[%.2d] (Waiting for next token ...)" $REMAINING` && printf "\r$display_message" > $( echo "$OUTPUT" )
    [ $WAIT_FOR_NEXT -lt $REMAINING ] && clear_display_message ${#display_message} && clip_otp && break
  else
    [ "$KEEP" = "true" ] && clip_otp
  fi

  [ "$WAIT" = "" ] && [ "$KEEP" = "" ] && clip_otp && break

  sleep 1
done

echo
